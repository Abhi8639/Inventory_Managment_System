package com.Inventory.Management.System.service;

import java.sql.Timestamp;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.Inventory.Management.System.model.User;
import com.Inventory.Management.System.model.Warehouse;
import com.Inventory.Management.System.repository.UserRepository;
import com.Inventory.Management.System.repository.WarehouseRepository;

@Service
public class UserService {
    @Autowired
    private UserRepository userRepository;

    @Autowired
    private PasswordEncoder passwordEncoder;

    @Autowired
    private WarehouseRepository warehouseRepository;  // Assuming you have a WarehouseRepository

    public User registerUser(User user) {
        user.setPassword(passwordEncoder.encode(user.getPassword()));
        user.setCreatedAt(new Timestamp(System.currentTimeMillis()));
        
        // Set account status to Active by default
        user.setAccountStatus("Active");

        // Fetch warehouse from the database if the warehouseId is provided
        if (user.getWarehouse() != null && user.getWarehouse().getWarehouseId() != null) {
            Optional<Warehouse> warehouseOptional = warehouseRepository.findById(user.getWarehouse().getWarehouseId());
            warehouseOptional.ifPresent(user::setWarehouse);
        }

        return userRepository.save(user);
    }

    public Optional<User> findByEmail(String email) {
        return userRepository.findByEmail(email);
    }

    public User saveUser(User user) {
        return userRepository.save(user);
    }
}
